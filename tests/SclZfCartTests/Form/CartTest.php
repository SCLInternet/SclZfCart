<?php

namespace SclZfCartTests\Form;

use SclZfCart\Form\Cart;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-02-08 at 17:05:30.
 */
class CartTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Cart
     */
    protected $form;

    /**
     */
    protected function setUp()
    {
        $this->form = new Cart;
    }

    public function testSubmitButtons()
    {
        $this->assertInstanceOf('Zend\Form\Element', $this->form->get('update'));
        $this->assertInstanceOf('Zend\Form\Element', $this->form->get('checkout'));
        $this->assertEquals('post', $this->form->getAttribute('method'));
    }

    /**
     * @covers SclZfCart\Form\Cart::addItem
     * @covers SclZfCart\Form\Cart::getQuantityElement
     * @covers SclZfCart\Form\Cart::getItemQuantity
     */
    public function testItemMethods()
    {
        $uid = 'asdfg';
        $quantity = 2;

        $item = $this->getMock('SclZfCart\CartItemInterface');

        $item->expects($this->atLeastOnce())->method('getUid')->will($this->returnValue($uid));
        $item->expects($this->atLeastOnce())->method('getQuantity')->will($this->returnValue($quantity));

        $this->form->addItem($item);

        $element = $this->form->get($uid);
        $this->assertInstanceOf('Zend\Form\Element', $element, 'Direct fetch element test');

        $this->assertEquals($quantity, $this->form->get($uid)->getValue(), 'Direct quantity test');

        $this->assertEquals($element, $this->form->getQuantityElement($item), 'getQuantityElement() test');

        $this->assertEquals($quantity, $this->form->getItemQuantity($item), 'getItemQuantity() test');
    }
}
