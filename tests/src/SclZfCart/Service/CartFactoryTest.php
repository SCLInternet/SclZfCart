<?php
namespace SclZfCart\Service;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-02-08 at 17:05:30.
 */
class CartFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var CartFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new CartFactory;
    }

    /**
     * @covers SclZfCart\Service\CartFactory::createService
     * @todo   Implement testCreateService().
     */
    public function testCreateService()
    {
        $serviceLocator = $this->getMock('Zend\ServiceManager\ServiceLocatorInterface');
        $storage = $this->getMock('SclZfCart\Storage\StorageInterface');

        $session = new \stdClass();
        $session->cartId = 43;

        $serviceLocator->expects($this->at(0))
            ->method('get')
            ->with($this->equalTo('SclZfCart\Storage'))
            ->will($this->returnValue($storage));

        $serviceLocator->expects($this->at(1))
            ->method('get')
            ->with($this->equalTo('SclZfCart\Session'))
            ->will($this->returnValue($session));

        $storage->expects($this->once())
            ->method('load')
            ->with($this->equalTo($session->cartId)/*,  $this->instanceOf('SclZfCart\Cart') */);

        /*
        $application = $serviceLocator->get('Application');

        $eventManager = $application->getEventManager();

        $eventManager->attach(
            MvcEvent::EVENT_FINISH,
            function (MvcEvent $event) use ($session, $storage, $cart) {
                $session->cartId = $storage->store($cart);
            }
        );
        */

//        $this->assertInstanceOf('SclZfCart\Cart', $this->object->createService($serviceLocator));
        $this->markTestIncomplete("It's to late to finish this");
    }

    public function testCreateServiceWithoutLoad()
    {
        $this->markTestIncomplete('do me');
    }
}
